package org.example.rms;

import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by Apache CXF 4.1.1
 * 2025-03-17T17:06:51.865+08:00
 * Generated source version: 4.1.1
 *
 */
@WebServiceClient(name = "CertificationWebService",
                  wsdlLocation = "file:/C:/Users/lenovo/Desktop/certification.wsdl",
                  targetNamespace = "http://microsoft.com/DRM/CertificationService")
public class CertificationWebService extends Service {

    public static final URL WSDL_LOCATION;

    public static final QName SERVICE = new QName("http://microsoft.com/DRM/CertificationService", "CertificationWebService");
    public static final QName CertificationWebServiceSoap = new QName("http://microsoft.com/DRM/CertificationService", "CertificationWebServiceSoap");
    public static final QName CertificationWebServiceSoap12 = new QName("http://microsoft.com/DRM/CertificationService", "CertificationWebServiceSoap12");
    static {
        URL url = null;
        try {
            url = URI.create("file:/C:/Users/lenovo/Desktop/certification.wsdl").toURL();
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(CertificationWebService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/lenovo/Desktop/certification.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CertificationWebService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CertificationWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CertificationWebService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public CertificationWebService(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public CertificationWebService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public CertificationWebService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns CertificationWebServiceSoap
     */
    @WebEndpoint(name = "CertificationWebServiceSoap")
    public CertificationWebServiceSoap getCertificationWebServiceSoap() {
        return super.getPort(CertificationWebServiceSoap, CertificationWebServiceSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CertificationWebServiceSoap
     */
    @WebEndpoint(name = "CertificationWebServiceSoap")
    public CertificationWebServiceSoap getCertificationWebServiceSoap(WebServiceFeature... features) {
        return super.getPort(CertificationWebServiceSoap, CertificationWebServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns CertificationWebServiceSoap
     */
    @WebEndpoint(name = "CertificationWebServiceSoap12")
    public CertificationWebServiceSoap getCertificationWebServiceSoap12() {
        return super.getPort(CertificationWebServiceSoap12, CertificationWebServiceSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CertificationWebServiceSoap
     */
    @WebEndpoint(name = "CertificationWebServiceSoap12")
    public CertificationWebServiceSoap getCertificationWebServiceSoap12(WebServiceFeature... features) {
        return super.getPort(CertificationWebServiceSoap12, CertificationWebServiceSoap.class, features);
    }

}
